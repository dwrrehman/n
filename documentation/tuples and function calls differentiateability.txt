(make a tuple) -> (int int int) {
	print x
	return (6, 7, 8)
}




(main) {
	x = make a tuple

	print x   :: "(6 7 8)"

	::	(make a tuple)         

	::		this is a function call, because its referencing a non empty signature.

	::	(6, 7, 8)

	::	this is a tuple literal, because its "referencing a empty signature, 
	::		which cant be called. ...thus it is a tuple literal.

}






:: note that for IIL, (immed invoked lambdas), you cant have a newline between the function signature and the block delimiters, or the block del and the invocation.

:: ex ::

(x: int, y: int) -> (int) {
    return x + y
} (4, 5)

:: this expression returns 9.
