text:
 :::
runtime (add this (and then)) {

}

:::
preprocessed text:::
runtime (add this (and then)) {

}

 :::
::::::::::LEX:::::::::::
TOKEN(type: keyword, value: "runtime", [1:1])
TOKEN(type: operator, value: "(", [1:9])
TOKEN(type: identifier, value: "add", [1:12])
TOKEN(type: identifier, value: "this", [1:17])
TOKEN(type: operator, value: "(", [1:19])
TOKEN(type: keyword, value: "and", [1:20])
TOKEN(type: identifier, value: "then", [1:27])
TOKEN(type: operator, value: ")", [1:28])
TOKEN(type: operator, value: ")", [1:29])
TOKEN(type: operator, value: "{", [1:31])
TOKEN(type: operator, value: "
", [1:32])
TOKEN(type: operator, value: "
", [2:1])
TOKEN(type: operator, value: "}", [3:1])
TOKEN(type: operator, value: "
", [3:2])
TOKEN(type: operator, value: "
", [4:1])
:::::::END OF LEX:::::::
successfully parsed.
------------ PARSE: ------------- 


*   program

*   *   declaration_list

*   *   *   declaration

*   *   *   *   function_declaration

*   *   *   *   *   child #0: 
*   *   *   *   *   qualifier_list

*   *   *   *   *   *   qualifier

*   *   *   *   *   *   *   terminal
*   *   *   *   *   *   *   type = keyword
*   *   *   *   *   *   *   value = runtime

*   *   *   *   *   child #1: 
*   *   *   *   *   terminal
*   *   *   *   *   type = operator
*   *   *   *   *   value = (

*   *   *   *   *   child #2: 
*   *   *   *   *   parameter_signature

*   *   *   *   *   *   child #0: 
*   *   *   *   *   *   parameter_list

*   *   *   *   *   *   *   child #0: 
*   *   *   *   *   *   *   parameter

*   *   *   *   *   *   *   *   identifier_or_keyword

*   *   *   *   *   *   *   *   *   terminal
*   *   *   *   *   *   *   *   *   type = identifier
*   *   *   *   *   *   *   *   *   value = add

*   *   *   *   *   *   *   child #1: 
*   *   *   *   *   *   *   parameter_list

*   *   *   *   *   *   *   *   parameter

*   *   *   *   *   *   *   *   *   identifier_or_keyword

*   *   *   *   *   *   *   *   *   *   terminal
*   *   *   *   *   *   *   *   *   *   type = identifier
*   *   *   *   *   *   *   *   *   *   value = this

*   *   *   *   *   *   child #1: 
*   *   *   *   *   *   optional_signature_list

*   *   *   *   *   *   *   optional_signature

*   *   *   *   *   *   *   *   child #0: 
*   *   *   *   *   *   *   *   terminal
*   *   *   *   *   *   *   *   type = operator
*   *   *   *   *   *   *   *   value = (

*   *   *   *   *   *   *   *   child #1: 
*   *   *   *   *   *   *   *   parameter_list

*   *   *   *   *   *   *   *   *   child #0: 
*   *   *   *   *   *   *   *   *   parameter

*   *   *   *   *   *   *   *   *   *   identifier_or_keyword

*   *   *   *   *   *   *   *   *   *   *   terminal
*   *   *   *   *   *   *   *   *   *   *   type = keyword
*   *   *   *   *   *   *   *   *   *   *   value = and

*   *   *   *   *   *   *   *   *   child #1: 
*   *   *   *   *   *   *   *   *   parameter_list

*   *   *   *   *   *   *   *   *   *   parameter

*   *   *   *   *   *   *   *   *   *   *   identifier_or_keyword

*   *   *   *   *   *   *   *   *   *   *   *   terminal
*   *   *   *   *   *   *   *   *   *   *   *   type = identifier
*   *   *   *   *   *   *   *   *   *   *   *   value = then

*   *   *   *   *   *   *   *   child #2: 
*   *   *   *   *   *   *   *   terminal
*   *   *   *   *   *   *   *   type = operator
*   *   *   *   *   *   *   *   value = )

*   *   *   *   *   child #3: 
*   *   *   *   *   terminal
*   *   *   *   *   type = operator
*   *   *   *   *   value = )

*   *   *   *   *   child #4: 
*   *   *   *   *   terminal
*   *   *   *   *   type = operator
*   *   *   *   *   value = {

*   *   *   *   *   child #5: 
*   *   *   *   *   statement_list

*   *   *   *   *   *   newlines

*   *   *   *   *   *   *   child #0: 
*   *   *   *   *   *   *   terminal
*   *   *   *   *   *   *   type = operator
*   *   *   *   *   *   *   value = 


*   *   *   *   *   *   *   child #1: 
*   *   *   *   *   *   *   newlines

*   *   *   *   *   *   *   *   terminal
*   *   *   *   *   *   *   *   type = operator
*   *   *   *   *   *   *   *   value = 


*   *   *   *   *   child #6: 
*   *   *   *   *   terminal
*   *   *   *   *   type = operator
*   *   *   *   *   value = }

*   *   *   *   *   child #7: 
*   *   *   *   *   required_newlines

*   *   *   *   *   *   child #0: 
*   *   *   *   *   *   terminal
*   *   *   *   *   *   type = operator
*   *   *   *   *   *   value = 


*   *   *   *   *   *   child #1: 
*   *   *   *   *   *   required_newlines

*   *   *   *   *   *   *   terminal
*   *   *   *   *   *   *   type = operator
*   *   *   *   *   *   *   value = 

Program ended with exit code: 0